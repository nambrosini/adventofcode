name: clippy
on:
  workflow_run:
    workflows: ["format"]
    types:
      - completed
env:
  CARGO_TERM_COLOR: always
jobs:
  clippy-2015:
    name: Run 2015 rust-clippy analyzing
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af #@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          override: true
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            aoc_2015:
              - '2015/**'
            aoc_2016:
              - '2016/**'
            aoc_2017:
              - '2017/**'
            aoc_2018:
              - '2018/**'
            aoc_2019:
              - '2019/**'
            aoc_2020:
              - '2020/**'
            aoc_2021:
              - '2021/**'
            aoc_2022:
              - '2022/**'
      - name: Install required cargo
        run: cargo install clippy-sarif sarif-fmt
      - name: Run rust-clippy 2015
        if: steps.filter.outputs.aoc_2015 == 'true'
        run:
          cargo clippy 
          --all-targets 
          --all-features 
          --message-format=json | clippy-sarif | sed -e 's/src\//2015\/src\//g' | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true
        working-directory: "2015"
      - name: Upload analysis results to GitHub 2015
        if: steps.filter.outputs.aoc_2015 == 'true'
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 2015/rust-clippy-results.sarif
          wait-for-processing: true
      - name: Run rust-clippy 2016
        if: steps.filter.outputs.aoc_2016 == 'true'
        run:
          cargo clippy 
          --all-targets 
          --all-features 
          --message-format=json | clippy-sarif | sed -e 's/src\//2016\/src\//g' | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true
        working-directory: "2016"
      - name: Upload analysis results to GitHub 2016
        if: steps.filter.outputs.aoc_2016 == 'true'
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 2016/rust-clippy-results.sarif
          wait-for-processing: true
      - name: Run rust-clippy 2017
        if: steps.filter.outputs.aoc_2017 == 'true'
        run:
          cargo clippy 
          --all-targets 
          --all-features 
          --message-format=json | clippy-sarif | sed -e 's/src\//2017\/src\//g' | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true
        working-directory: "2017"
      - name: Upload analysis results to GitHub 2017
        if: steps.filter.outputs.aoc_2017 == 'true'
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 2017/rust-clippy-results.sarif
          wait-for-processing: true
      - name: Run rust-clippy 2018
        if: steps.filter.outputs.aoc_2018 == 'true'
        run:
          cargo clippy 
          --all-targets 
          --all-features 
          --message-format=json | clippy-sarif | sed -e 's/src\//2018\/src\//g' | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true
        working-directory: "2018"
      - name: Upload analysis results to GitHub 2018
        if: steps.filter.outputs.aoc_2018 == 'true'
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 2018/rust-clippy-results.sarif
          wait-for-processing: true
      - name: Run rust-clippy 2019
        if: steps.filter.outputs.aoc_2019 == 'true'
        run:
          cargo clippy 
          --all-targets 
          --all-features 
          --message-format=json | clippy-sarif | sed -e 's/src\//2019\/src\//g' | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true
        working-directory: "2019"
      - name: Upload analysis results to GitHub 2019
        if: steps.filter.outputs.aoc_2019 == 'true'
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: rust-clippy-results.sarif
          wait-for-processing: true
      - name: Run rust-clippy 2020
        if: steps.filter.outputs.aoc_2020 == 'true'
        run:
          cargo clippy 
          --all-targets 
          --all-features 
          --message-format=json | clippy-sarif | sed -e 's/src\//2020\/src\//g' | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true
        working-directory: "2020"
      - name: Upload analysis results to GitHub 2020
        if: steps.filter.outputs.aoc_2020 == 'true'
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 2020/rust-clippy-results.sarif
          wait-for-processing: true
      - name: Run rust-clippy 2021
        if: steps.filter.outputs.aoc_2021 == 'true'
        run:
          cargo clippy 
          --all-targets 
          --all-features 
          --message-format=json | clippy-sarif | sed -e 's/src\//2021\/src\//g' | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true
        working-directory: "2021"
      - name: Upload analysis results to GitHub 2021
        if: steps.filter.outputs.aoc_2021 == 'true'
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 2021/rust-clippy-results.sarif
          wait-for-processing: true
      - name: Run rust-clippy 2022
        if: steps.filter.outputs.aoc_2022 == 'true'
        run:
          cargo clippy 
          --all-targets 
          --all-features 
          --message-format=json | clippy-sarif | sed -e 's/src\//2022\/src\//g' | tee rust-clippy-results.sarif | sarif-fmtt
        continue-on-error: true
        working-directory: "2022"
      - name: Upload analysis results to GitHub 2022
        if: steps.filter.outputs.aoc_2022 == 'true'
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 2022/rust-clippy-results.sarif
          wait-for-processing: true
